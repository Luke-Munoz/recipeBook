{"version":3,"sources":["components/pages/ViewBlogPage.js","components/nav/index.js","components/pages/Login.js","components/pages/Signup.js","components/pages/OnLoadPage.js","components/pages/LoggedIn.js","App.js","reportWebVitals.js","index.js"],"names":["Recipes","props","useState","recipes","setRecipes","commentFormHandler","e","a","preventDefault","commentBody","document","querySelector","value","writtenBy","axios","method","data","response","console","log","recipeTitle","recipeText","createdBy","url","useEffect","fetch","json","getRecipes","Container","className","Row","Col","length","map","recipe","comments","comment","Form","onSubmit","form","xs","size","offset","sm","md","FormGroup","Label","for","Input","placeholder","name","type","id","Button","title","htmlFor","Card","propTypes","tag","PropTypes","oneOfType","func","string","inverse","bool","color","body","CardBody","CardDeck","CardImg","top","bottom","CardSubtitle","CardText","CardTitle","Navigation","tab","href","toLowerCase","onClick","handlePageChange","currentPage","Login","email","password","Signup","create_username","create_password","create_user_email","JSON","stringify","username","headers","serverResponse","message","Error","OnLoadPage","lg","LoggedIn","ingredients","author","comment_author","replyBody","ok","location","replace","alert","statusText","imageSelected","setImageSelected","onChange","event","target","files","formData","FormData","append","Axios","post","then","cloudName","publicId","App","renderPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20fe4127.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    Card, CardImg, CardTitle, CardText, CardDeck,\n    CardSubtitle, CardBody,Container, Row, Col, Form, FormGroup, Label, Input, Button\n} from 'reactstrap';\nimport axios from 'axios';\n\n\nimport PropTypes from 'prop-types';\n\nfunction Recipes(props){\n\n\nconst [recipes,setRecipes ] = useState([])\n useEffect(async () => {\n    const response = await fetch('/api/recipe/')\n        const getRecipes = await response.json()\n        console.log(getRecipes)\n     setRecipes(getRecipes)\n    },[])\n\n\nasync function commentFormHandler (e){\ne.preventDefault();\ntry{\n    const commentBody = document.querySelector('input[name = \"commentBody\"]').value;\n    const writtenBy = document.querySelector('input[name = \"fillertext\"]').value;\n\n    const response = await axios('/api/comment', {\n        method:'POST',\n        data: ({\n            commentBody,\n            writtenBy\n    })\n\n    })\n\n    console.log(response.data);\n}catch(err){\n    console.log(err);\n}\n\n}\n\n    async function recipeFormHandler(e){\n\n        e.preventDefault();\n        try {\n            const recipeTitle = document.querySelector('input[name = \"recipeTitle\"]').value;\n            const recipeText = document.querySelector('input[name = \"recipeText\"]').value;\n            const createdBy = document.querySelector('input[name = \"createdBy\"]').value;\n\n\n\n            const response = await axios ({\n                url: '/api/recipe/',\n                method: 'POST',\n                data: {\n                    recipeTitle,\n                    recipeText,\n                    createdBy\n                }\n\n            })\n          console.log(response.data);\n        } catch (err){\n            console.log(err)\n        }\n    }\n\n\n    return (\n\n        <Container className=\"forms-background\">\n            <Row>\n                <Col>\n                    <h2 className=\"header-2\">Recipe!</h2>\n                </Col>\n            </Row>\n            <div>\n                {recipes.length > 0 && recipes.map( (recipe) => (\n                    <p key ={recipe.title}>\n\n                        <strong>{recipe.recipeTitle}</strong>\n                            <p>\n\n                        {recipe.recipeText}\n                            </p>\n\n                        {recipe.comments.map( (comment) =>(\n                            <p key = {comment.commentBody }>{comment.commentBody}</p>\n                        ))}\n                        <Form onSubmit={commentFormHandler}>\n                            <Row form>\n                                <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                                    <FormGroup>\n                                        <Label for = \"commentBody\">Comment</Label>\n                                        <Input\n                                            placeholder=\"Comment\"\n                                            name = \"commentBody\"\n                                            type = \"commentBody\"\n                                            id = \"commentBody\"\n                                        />\n                                        <Button  className=\"submitBtn\" type = \"submit\">Submit</Button>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </p>\n                ))}\n                <Row>\n                    <Col>\n                        <h3 className=\"header-3\">Post a Recipe</h3>\n                    </Col>\n                </Row>\n                <Form onSubmit = {recipeFormHandler}>\n                    <Row>\n                        <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                            <FormGroup>\n                                <Label htmlFor=\"recipeTitle\">Recipe Title:</Label>\n                                <Input\n                                    placeholder = \"Recipe Title\"\n                                    name = \"recipeTitle\"\n                                    type = \"recipeTitle\"\n                                    id = \"recipeTitle\"\n\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                            <FormGroup>\n                                <Label htmlFor=\"recipeText\">Recipe Ingredients:</Label>\n                                <Input\n                                    placeholder = \"Recipe Ingredients\"\n                                    name = \"recipeText\"\n                                    type = \"recipeText\"\n                                    id = \"recipeText\"\n\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                            <FormGroup>\n                                <Label htmlFor=\"createdBy\">Created By:</Label>\n                                <Input\n                                    placeholder = \"Created By\"\n                                    name = \"createdBy\"\n                                    type = \"createdBy\"\n                                    id = \"createdBy\"\n\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <FormGroup className=\"buttonDiv\">\n                                <Button className=\"submitBtn\" type = \"submit\">Submit</Button>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n\n        </Container>\n\n\n    );\n\n}\n\nexport default Recipes\n\n\n    \n\n\nCard.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    inverse: PropTypes.bool,\n    color: PropTypes.string,\n    body: PropTypes.bool,\n    className: PropTypes.string\n  };\n  \nCardBody.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n  \nCardDeck.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n  \nCardImg.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\n    top: PropTypes.bool,\n    bottom: PropTypes.bool\n};\n\nCardSubtitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n  \nCardText.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n  \nCardTitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n\n\n","import React from 'react';\n// import { Nav, NavItem, NavLink, Container, Row, Col } from 'reactstrap';\n\n\n\nconst Navigation = (props) => {\n\n\n\n\n    const tabs = ['Recipes', 'Login', ]\n\n\n    return (\n    <ul className=\"nav nav-tabs\">\n        {tabs.map(tab => (\n            <li className=\"nav-item\" key={tab}>\n                <a\n                    href={'#' + tab.toLowerCase()}\n                    // Whenever a tab is clicked on,\n                    // the current page is set through the handlePageChange props.\n                    onClick={() => props.handlePageChange(tab)}\n                    className={\n                        props.currentPage === tab ? 'nav-link active' : 'nav-link'\n                    }>\n                    {tab}\n                </a>\n            </li>\n        ))}\n    </ul>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\n//import {log} from \"nodemon/lib/utils\";\nimport axios from 'axios';\n\n\nfunction Login(props){\n\n// const clickEventHandler = (e) => {\n//     props.handlePageChange('LoggedIn')\n// }\n\n\n\n    async function loginFormHandler(e) {\n        e.preventDefault();\n        try{\n\n        const email = document.querySelector('input[name= \"email\"]').value;\n        const password = document.querySelector('input[name= \"password\"]').value;\n\n        const response = await axios('/api/user/login',{\n            method: 'POST',\n            data: ({\n                email,\n                password\n            }),\n\n        })\n        props.handlePageChange('LoggedIn')\n            console.log(response.data)\n\n        } catch(err) {\n            console.log(err);\n\n\n        }\n    }\n\n    return (\n\n        <Container className=\"forms-background\">\n            <h2 className=\"header-2\" >Login</h2>\n            <Form onSubmit = {loginFormHandler}>\n                <Row form>\n                    <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                        <FormGroup className=\"flex-row space-between\">\n                            <Label htmlFor=\"email\">Email address: </Label>\n                            <Input\n                            placeholder=\"youremail@gmail.com\"\n                            name=\"email\"\n                            type = \"email\"\n                            id = \"email\"\n\n                            />\n\n                        </FormGroup>\n                        <FormGroup className=\"flex-row space-between\">\n                            <Label htmlFor=\"pwd\">Password: </Label>\n                            <Input\n                            placeholder=\"**********\"\n                            name = \"password\"\n                            type = \"password\"\n                            id = \"password\"\n\n                            />\n                        </FormGroup>\n\n                        \n                        <FormGroup className=\"buttonDiv\">\n                            <Button className=\"submitBtn\" type=\"submit\" >Submit</Button>{' '}\n                        </FormGroup>\n                        \n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n\n    )\n}\n\nexport default Login\n","\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\n\nfunction Signup(props) {\n//const [formState, setFormState] = useState({email:'', password: ''});\n//const handleFormSubmit\n//const handleChange\n\n\n\n\n\n\n\n\n\n\n\n        async function signUpFormHandler (e) {\n                e.preventDefault();\n                try {\n                const create_username = document.querySelector('input[name= \"username\"]').value;\n                const create_password = document.querySelector('input[name= \"password\"]').value;\n                const create_user_email = document.querySelector('input[name= \"email\"]').value;\n\n\n\n                console.log(create_username,create_password,create_user_email);\n                const response = await fetch('/api/user', {\n                        method: 'POST',\n                        body: JSON.stringify({\n                                username: create_username,\n                              password:  create_password,\n                              email:  create_user_email\n                        }),\n                        headers: {\n                                'Content-Type': 'application/json'\n                        }\n\n                })\n        const serverResponse = await response.json()\n                            if(serverResponse.message) {\n                                     new Error(serverResponse);\n                            }\n                            console.log(serverResponse)\n\n\n                    }catch (err){\n                        console.log(err)\n                    }\n        }\n\n        return (\n                <Container className=\"forms-background\">\n                        <Row>\n                                <Col>\n                                        <h2 className=\"header-2\">Signup</h2>\n                                </Col>\n                        </Row>\n                                <Form onSubmit={signUpFormHandler}>\n                                        <Row form>\n                                                <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                                                        <FormGroup>\n                                                                <Label for=\"username\">Username: </Label>\n                                                                <Input\n                                                                placeholder=\"username\"\n                                                                name = \"username\"\n                                                                type = \"username\"\n                                                                id = \"username\"\n                                                                \n                                                                />\n                                                        </FormGroup>\n\n                                                        <FormGroup>\n                                                                <Label for=\"email\">Email: </Label>\n                                                                <Input\n                                                                placeholder=\"youremail@hotmail.com\"\n                                                                name = \"email\"\n                                                                type = \"email\"\n                                                                id = \"email\"\n                                                                \n                                                                />\n                                                        </FormGroup>\n                                                        <FormGroup>\n                                                                <Label for=\"password\">Password: </Label>\n                                                                <Input\n                                                                placeholder= \"*******\"\n                                                                name = \"password\"\n                                                                type = \"password\"\n                                                                id = \"password\"\n                                                                \n                                                                />\n                                                        </FormGroup>\n                                                        <FormGroup className=\"buttonDiv\">\n                                                                <Button color='secondary' className=\"submitBtn\" type = \"submit\">Submit</Button>\n                                                        </FormGroup>\n                                                </Col>\n                                        </Row>\n                                </Form>\n                </Container>\n\n\n        )\n}\n\n\n\n\n\nexport default Signup;","\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Login from './Login';\nimport Signup from './Signup';\n\nconst OnLoadPage = (props) => {\n    return (\n        <Container className=\"landingContainer\">\n            <Row>\n                <Col>\n                    <h1 className=\"display-3\">RecipeBook</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}} lg={{size:'8', offset:'2'}}>\n                    <p className=\"lead\">RecipeBook is a place for you to find, share, and try out all kinds of recipes from all kinds of people! Sign in or create an account to start cooking!</p>\n                </Col>\n            </Row>\n            <Login currentPage = {props.currentPage}  handlePageChange = {props.handlePageChange}/>\n            <Signup />\n        </Container>\n        \n    );\n};\n\nexport default OnLoadPage;","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport {Image} from 'cloudinary-react';\nimport { Button, Container, Row, Col, Form, Input, Label, FormGroup, } from 'reactstrap';\nfunction LoggedIn() {\n\n\n    //creates new recipes\nasync function recipeFormHandler(e){\n    e.preventDefault();\n    try {\n        const title = document.querySelector('input[name = \"recipeTitle\"]').value;\n        const ingredients = document.querySelector('input[name = \"recipeText\"]').value;\n        const author = document.querySelector('input[name = \"createdBy\"]').value;\n\n\n        const response = await fetch('api/recipes', {\n            method: 'POST',\n            body: JSON.stringify({\n                title,\n                ingredients,\n                author\n            }),\n            headers: {\n                'Content-Type': 'application.json'\n            }\n        })\n        const serverResponse = await response.json()\n        if (serverResponse.message) {\n            new Error(serverResponse);\n        }\n        console.log(serverResponse)\n    } catch (err){\n        console.log(err)\n    }\n}\n\n    //creates new comment on posts\nasync function commentFormHandler(e){\n    e.preventDefault();\n    try{\n\n    const comment = document.querySelector('input[name = \"commentBody\"]').value;\n    const comment_author = document.querySelector('input[name = \"writtenBy\"]').value;\n\n    const response = await fetch('/api/recipeId', {\n        method: 'POST',\n        body: JSON.stringify({\n            comment,\n            comment_author\n        }),\n        headers: {\n            'Content-Type': 'application.json'\n        }\n    })\n    const serverResponse = await response.json()\n        if(serverResponse.message){\n            new Error(serverResponse)\n        }\n        console.log(serverResponse);\n    } catch (err){\n        console.log(err);\n    }\n}\n\n    //creates a reply on a comment\nasync function replyFormHandler(e){\n    e.preventDefault();\n    try {\n        const replyBody = document.querySelector('input[name = \"fillertext\"]').value;\n        const writtenBy = document.querySelector('input[name = \"fillertext\"]').value;\n\n        const response = await fetch('/api/:recipeId/:commentId', {\n            method: 'PUT',\n            body: JSON.stringify({\n                replyBody,\n                writtenBy\n            }),\n            headers: {\n                'Content-Type': 'application.json'\n            }\n        })\n        const serverResponse = await response.json()\n        if (serverResponse.message) {\n            new Error(serverResponse);\n        }\n        console.log(serverResponse)\n    }catch(err){\n        console.log(err)\n    }\n}\n\n    //logs the user out\nasync function logoutFormHandler(){\n    const response = await fetch('api./users/logout', {\n        method: 'post',\n        headers: { 'Content-Type': 'application/json'}\n    });\n    if (response.ok){\n        document.location.replace ('/');\n    } else {\n        alert(response.statusText);\n    }\n\n}\n\n\n    const [imageSelected, setImageSelected] = useState(\"\");\n    const uploadImage = () => {\n        const formData = new FormData();\n        formData.append(\"file\", imageSelected);\n        formData.append(\"upload_preset\", \"xqjdk6dx\");\n        Axios.post(\n            \"https://api.cloudinary.com/v1_1/dt8vj9whj/image/upload\",\n            formData\n        ).then((response) => {\n            console.log(response);\n        });\n    };\n\n    return (\n        <Container>\n            <h2 className=\"header-2\">Post A Recipe</h2>\n            <Form onSubmit = {recipeFormHandler}>\n                <Row form>\n                    <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                        <FormGroup className=\"flex-row space-between\">\n                            <Label htmlFor=\"recipeTitle\">Recipe Title:</Label>\n                            <Input\n                            placeholder = \"Recipe Title\"\n                            name = \"recipeTitle\"\n                            type = \"recipeTitle\"\n                            id = \"recipeTitle\"\n\n                            />\n                        </FormGroup>\n                        <FormGroup className=\"flex-row space-between\">\n                            <Label htmlFor=\"recipeText\">Recipe Ingredients:</Label>\n                            <Input \n                            placeholder = \"Recipe Ingredients\"\n                            name = \"recipeText\"\n                            type = \"recipeText\"\n                            id = \"recipeText\"\n\n                            />\n                        </FormGroup>\n                        <FormGroup className=\"flex-row space-between\">\n                            <Label htmlFor=\"createdBy\">Created By:</Label>\n                            <Input\n                            placeholder = \"Created By\"\n                            name = \"createdBy\"\n                            type = \"createdBy\"\n                            id = \"createdBy\"\n                            \n                            />\n                        </FormGroup>\n                        <FormGroup className=\"buttonDiv\">\n                            <Button className=\"submitBtn\"type = \"submit\">Submit</Button>\n                        </FormGroup>\n                    </Col>\n                </Row>\n            </Form>\n\n            <h1>Add A Comment</h1>\n            <Form onSubmit = {commentFormHandler}>\n                <FormGroup>\n                    <Label htmlFor=\"commentBody\">Comment:</Label>\n                    <Input\n                    placeholder = \"Comment\"\n                    name = \"commentBody\"\n                    type = \"commentBody\"\n                    id = \"commentBody\"\n\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"writtenBy\">Comment Written By:</Label>\n                    <Input \n                    placeholder = \"Comment Wriitten By\"\n                    name = \"writtenBy\"\n                    type = \"writtenBy\"\n                    id = \"writtenBy\"\n\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Button type = \"submit\">Submit</Button>\n                </FormGroup>\n            </Form>\n\n            <h1>Add A Reply</h1>\n            <Form onSubmit = {replyFormHandler}>\n                <FormGroup>\n                    <Label htmlFor=\"replyBody\">Add Reply:</Label>\n                    <Input\n                    placeholder = \"Add Reply\"\n                    name = \"replyBody\"\n                    type = \"replyBody\"\n                    id = \"replyBody\"\n\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"writtenBy\">Reply Written By:</Label>\n                    <Input\n                    placeholder = \"Reply Written By\"\n                    name = \"writtenBy\"\n                    type = \"writtenBy\"\n                    id = \"writtenBy\"\n\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Button type = \"submit\">Submit</Button>\n                </FormGroup>\n            </Form>\n            <div>\n                <Input\n                    type=\"file\"\n                    onChange={(event) => {\n                        setImageSelected(event.target.files[0]);\n                    }}\n                />\n                <Button onClick={uploadImage}> Upload Image</Button>\n                <Image\n                    cloudName=\"dt8vj9whj\" publicId=\"\" />\n                {/* in the publicId the url for the image goes there */}\n            </div>\n            <Form onSubmit={logoutFormHandler}>\n                <FormGroup>\n                    <Label htmlFor=\"logoutButton\">Logout</Label>\n                    <Input\n                    placeholder = \"logout\"\n                    name = \"logout\"\n                    type = \"logout\"\n                    id = \"logout\"\n                    />\n                </FormGroup>\n            </Form>\n        </Container>\n\n    )\n}\n\nexport default LoggedIn","import React, {useState} from 'react';\n//import {BrowserRouter as Router, Route, Switch} from 'react-route-dom';\nimport './App.css';\nimport Recipes from './components/pages/ViewBlogPage'\nimport Navigation from './components/nav';\nimport OnLoadPage from './components/pages/OnLoadPage';\nimport Login from './components/pages/Login';\n//import Home from './components/pages/Home';\nimport Signup from './components/pages/Signup'\nimport LoggedIn from './components/pages/LoggedIn';\n\nfunction App(props) {\n    const [currentPage, handlePageChange] = useState('Home')\n\n\n    const renderPage = () => {\n        switch (currentPage) {\n            \n\n            case 'Navigation':\n                return <Navigation/>;\n\n            case 'Recipes':\n                return <Recipes/>;\n\n\n            case 'LoggedIn':\n                return <LoggedIn />;\n\n\n            default:\n\n                return <OnLoadPage currentPage={currentPage} handlePageChange={handlePageChange}/>;\n        }\n    }\n\n    return (\n        <div>\n            <header className=\"navigation\">\n                <Navigation currentPage={currentPage} handlePageChange={handlePageChange}/>\n            </header>\n            <div> {renderPage(currentPage)}</div>\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}