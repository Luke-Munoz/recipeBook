{"version":3,"sources":["components/pages/ViewBlogPage.js","components/nav/index.js","components/pages/OnLoadPage.js","components/pages/Login.js","components/pages/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Recipes","props","useState","recipes","setRecipes","commentFormHandler","e","a","preventDefault","commentBody","document","querySelector","value","writtenBy","axios","method","data","response","console","log","recipeTitle","recipeText","createdBy","url","useEffect","fetch","json","getRecipes","Container","className","Row","Col","length","map","recipe","comments","comment","Form","onSubmit","form","xs","size","offset","sm","md","FormGroup","Label","for","Input","placeholder","name","type","id","title","htmlFor","Card","propTypes","tag","PropTypes","oneOfType","func","string","inverse","bool","color","body","CardBody","CardDeck","CardImg","top","bottom","CardSubtitle","CardText","CardTitle","Navigation","tab","href","toLowerCase","onClick","handlePageChange","currentPage","OnLoadPage","lg","Login","email","password","Button","Signup","create_username","create_password","create_user_email","JSON","stringify","username","headers","serverResponse","message","Error","App","renderPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.956b3935.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    Card, CardImg, CardTitle, CardText, CardDeck,\n    CardSubtitle, CardBody,Container, Row, Col, Form, FormGroup, Label, Input\n} from 'reactstrap';\nimport axios from 'axios';\n\n\nimport PropTypes from 'prop-types';\n\nfunction Recipes(props){\n\n\nconst [recipes,setRecipes ] = useState([])\n useEffect(async () => {\n    const response = await fetch('/api/recipe/')\n        const getRecipes = await response.json()\n        console.log(getRecipes)\n     setRecipes(getRecipes)\n    },[])\n\n\nasync function commentFormHandler (e){\ne.preventDefault();\ntry{\n    const commentBody = document.querySelector('input[name = \"commentBody\"]').value;\n    const writtenBy = document.querySelector('input[name = \"fillertext\"]').value;\n\n    const response = await axios('/api/comment', {\n        method:'POST',\n        data: ({\n            commentBody,\n            writtenBy\n    })\n\n    })\n\n    console.log(response.data);\n}catch(err){\n    console.log(err);\n}\n\n}\n\n    async function recipeFormHandler(e){\n\n        e.preventDefault();\n        try {\n            const recipeTitle = document.querySelector('input[name = \"recipeTitle\"]').value;\n            const recipeText = document.querySelector('input[name = \"recipeText\"]').value;\n            const createdBy = document.querySelector('input[name = \"createdBy\"]').value;\n\n\n\n            const response = await axios ({\n                url: '/api/recipe/',\n                method: 'POST',\n                data: {\n                    recipeTitle,\n                    recipeText,\n                    createdBy\n                }\n\n            })\n          console.log(response.data);\n        } catch (err){\n            console.log(err)\n        }\n    }\n\n\n    return (\n\n   <Container className=\"forms-background\">\n       <Row>\n           <Col>\n               <h2 className=\"header-2\">Recipe!</h2>\n           </Col>\n       </Row>\n       <div>\n           {recipes.length > 0 && recipes.map( (recipe) => (\n               <p key ={recipe.title}>\n\n                   <strong>{recipe.recipeTitle}</strong>\n                    <p>\n\n                   {recipe.recipeText}\n                    </p>\n\n                   {recipe.comments.map( (comment) =>(\n                       <p key = {comment.commentBody }>{comment.commentBody}</p>\n                   ))}\n                   <Form onSubmit={commentFormHandler}>\n                       <Row form>\n                           <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                               <FormGroup>\n                                   <Label for = \"commentBody\">Comment</Label>\n                                   <Input\n                                       placeholder=\"Comment\"\n                                       name = \"commentBody\"\n                                       type = \"commentBody\"\n                                       id = \"commentBody\"\n                                   />\n                                   <button  className=\"submitBtn\" type = \"submit\">Submit</button>\n                               </FormGroup>\n                           </Col>\n                       </Row>\n                   </Form>\n               </p>\n           ))}\n           <h2>Post a Recipe</h2>\n           <form onSubmit = {recipeFormHandler}>\n               <div>\n                   <label htmlFor=\"recipeTitle\">Recipe Title:</label>\n                   <input\n                       placeholder = \"Recipe Title\"\n                       name = \"recipeTitle\"\n                       type = \"recipeTitle\"\n                       id = \"recipeTitle\"\n\n                   />\n               </div>\n               <div>\n                   <label htmlFor=\"recipeText\">Recipe Ingredients:</label>\n                   <input\n                       placeholder = \"Recipe Ingredients\"\n                       name = \"recipeText\"\n                       type = \"recipeText\"\n                       id = \"recipeText\"\n\n                   />\n               </div>\n               <div>\n                   <label htmlFor=\"createdBy\">Created By:</label>\n                   <input\n                       placeholder = \"Created By\"\n                       name = \"createdBy\"\n                       type = \"createdBy\"\n                       id = \"createdBy\"\n\n                   />\n               </div>\n               <div>\n                   <button type = \"submit\">Submit</button>\n               </div>\n           </form>\n       </div>\n\n   </Container>\n\n\n    );\n\n}\n\nexport default Recipes\n\n\n    \n\n\nCard.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    inverse: PropTypes.bool,\n    color: PropTypes.string,\n    body: PropTypes.bool,\n    className: PropTypes.string\n  };\n  \nCardBody.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n  \nCardDeck.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n  \nCardImg.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\n    top: PropTypes.bool,\n    bottom: PropTypes.bool\n};\n\nCardSubtitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n  \nCardText.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n  \nCardTitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n};\n\n\n","import React from 'react';\n// import { Nav, NavItem, NavLink, Container, Row, Col } from 'reactstrap';\n\n\n\nconst Navigation = (props) => {\n\n\n\n\n    const tabs = ['Recipes', 'Login', 'Signup']\n\n\n    return (\n    <ul className=\"nav nav-tabs\">\n        {tabs.map(tab => (\n            <li className=\"nav-item\" key={tab}>\n                <a\n                    href={'#' + tab.toLowerCase()}\n                    // Whenever a tab is clicked on,\n                    // the current page is set through the handlePageChange props.\n                    onClick={() => props.handlePageChange(tab)}\n                    className={\n                        props.currentPage === tab ? 'nav-link active' : 'nav-link'\n                    }>\n                    {tab}\n                </a>\n            </li>\n        ))}\n    </ul>\n    );\n}\n\nexport default Navigation;","\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst OnLoadPage = (props) => {\n    return (\n        <Container className=\"landingContainer\">\n            <Row>\n                <Col>\n                    <h1 className=\"display-3\">RecipeBook</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}} lg={{size:'8', offset:'2'}}>\n                    <p className=\"lead\">RecipeBook is a place for you to find, share, and try out all kinds of recipes from all kinds of people! Sign in or create an account to start cooking!</p>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default OnLoadPage;","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\n//import {log} from \"nodemon/lib/utils\";\nimport axios from 'axios';\n\nfunction Login(props){\n\n\n\n\n\n    async function loginFormHandler(e) {\n        e.preventDefault();\n        try{\n\n        const email = document.querySelector('input[name= \"email\"]').value;\n        const password = document.querySelector('input[name= \"password\"]').value;\n\n        const response = await axios('/api/user/login',{\n            method: 'POST',\n            data: ({\n                email,\n                password\n            }),\n\n        })\n            console.log(response.data)\n\n        } catch(err) {\n            console.log(err);\n\n\n        }\n    }\n\n    return (\n\n        <Container className=\"forms-background\">\n            <h2 className=\"header-2\" >Login</h2>\n            <Form onSubmit = {loginFormHandler}>\n                <Row form>\n                    <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                        <FormGroup className=\"flex-row space-between\">\n                            <Label htmlFor=\"email\">Email address: </Label>\n                            <Input\n                            placeholder=\"youremail@gmail.com\"\n                            name=\"email\"\n                            type = \"email\"\n                            id = \"email\"\n\n                            />\n\n                        </FormGroup>\n                        <FormGroup className=\"flex-row space-between\">\n                            <Label htmlFor=\"pwd\">Password: </Label>\n                            <Input\n                            placeholder=\"**********\"\n                            name = \"password\"\n                            type = \"password\"\n                            id = \"password\"\n\n                            />\n                        </FormGroup>\n\n                        \n                        <FormGroup className=\"buttonDiv\">\n                            <Button className=\"submitBtn\" type=\"submit\">Submit</Button>{' '}\n                        </FormGroup>\n                        \n                    </Col>\n                </Row>\n            </Form>\n        </Container>\n\n    )\n}\n\nexport default Login\n","\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Container, Row, Col } from 'reactstrap';\n\nfunction Signup(props) {\n//const [formState, setFormState] = useState({email:'', password: ''});\n//const handleFormSubmit\n//const handleChange\n\n\n\n\n\n\n\n\n\n\n\n        async function signUpFormHandler (e) {\n                e.preventDefault();\n                try {\n                const create_username = document.querySelector('input[name= \"username\"]').value;\n                const create_password = document.querySelector('input[name= \"password\"]').value;\n                const create_user_email = document.querySelector('input[name= \"email\"]').value;\n\n\n\n                console.log(create_username,create_password,create_user_email);\n                const response = await fetch('/api/user', {\n                        method: 'POST',\n                        body: JSON.stringify({\n                                username: create_username,\n                              password:  create_password,\n                              email:  create_user_email\n                        }),\n                        headers: {\n                                'Content-Type': 'application/json'\n                        }\n\n                })\n        const serverResponse = await response.json()\n                            if(serverResponse.message) {\n                                     new Error(serverResponse);\n                            }\n                            console.log(serverResponse)\n\n\n                    }catch (err){\n                        console.log(err)\n                    }\n        }\n\n        return (\n                <Container className=\"forms-background\">\n                        <Row>\n                                <Col>\n                                        <h2 className=\"header-2\">Signup</h2>\n                                </Col>\n                        </Row>\n                                <Form onSubmit={signUpFormHandler}>\n                                        <Row form>\n                                                <Col xs={{size: \"10\", offset:\"1\"}} sm={{size:\"10\"}} md={{size:\"8\", offset:\"2\"}}>\n                                                        <FormGroup>\n                                                                <Label for=\"username\">Username: </Label>\n                                                                <Input\n                                                                placeholder=\"username\"\n                                                                name = \"username\"\n                                                                type = \"username\"\n                                                                id = \"username\"\n                                                                \n                                                                />\n                                                        </FormGroup>\n\n                                                        <FormGroup>\n                                                                <Label for=\"email\">Email: </Label>\n                                                                <Input\n                                                                placeholder=\"youremail@hotmail.com\"\n                                                                name = \"email\"\n                                                                type = \"email\"\n                                                                id = \"email\"\n                                                                \n                                                                />\n                                                        </FormGroup>\n                                                        <FormGroup>\n                                                                <Label for=\"password\">Password: </Label>\n                                                                <Input\n                                                                placeholder= \"*******\"\n                                                                name = \"password\"\n                                                                type = \"password\"\n                                                                id = \"password\"\n                                                                \n                                                                />\n                                                        </FormGroup>\n                                                        <FormGroup className=\"buttonDiv\">\n                                                                <Button color='secondary' className=\"submitBtn\" type = \"submit\">Submit</Button>\n                                                        </FormGroup>\n                                                </Col>\n                                        </Row>\n                                </Form>\n                </Container>\n\n\n        )\n}\n\n\n\n\n\nexport default Signup;","import React, {useState} from 'react';\n//import {BrowserRouter as Router, Route, Switch} from 'react-route-dom';\nimport './App.css';\nimport Recipes from './components/pages/ViewBlogPage'\nimport Navigation from './components/nav';\nimport OnLoadPage from './components/pages/OnLoadPage';\nimport Login from './components/pages/Login';\n//import Home from './components/pages/Home';\nimport Signup from './components/pages/Signup'\n\nfunction App() {\n    const [currentPage, handlePageChange] = useState('Home')\n\n\n    const renderPage = () => {\n        switch (currentPage) {\n            case 'Signup':\n                return <Signup/>;\n\n            case 'Navigation':\n                return <Navigation/>;\n\n            case 'Recipes':\n                return <Recipes/>;\n\n            case 'Login':\n                return <Login/>;\n\n            default:\n\n                return <OnLoadPage currentPage={currentPage} handlePageChange={handlePageChange}/>;\n        }\n    }\n\n    return (\n        <div>\n            <header className=\"navigation\">\n                <Navigation currentPage={currentPage} handlePageChange={handlePageChange}/>\n            </header>\n            <div> {renderPage(currentPage)}</div>\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}